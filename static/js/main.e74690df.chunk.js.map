{"version":3,"sources":["logo.svg","fifty.png","ata.png","paf.png","GameState.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GameState","filename","this","FiftyFifty","PhoneAMentor","Audience","tsv","console","log","Questions","lines","split","length","forEach","line","values","Q","value","parseInt","question","correct","answers","shuffle","slice","push","err","sort","a","b","j","x","i","Math","floor","random","App","props","state","game","guess","fifty","currentQ","onFileChange","bind","setUpGame","loadNextQ","setGuess","useFifty","usePhone","useAudience","csv","gamestate","load","setState","e","f","file","target","files","reader","FileReader","onload","result","readAsText","innerHTML","g","mainWindow","src","logo","className","alt","width","type","accept","onChange","hidden","Answers","guessed","crossedOut","A","Container","Row","Col","sm","Button","variant","includes","onClick","Alert","paf","ata","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e74690df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ad649651.svg\";","module.exports = __webpack_public_path__ + \"static/media/fifty.59c71e31.png\";","module.exports = __webpack_public_path__ + \"static/media/ata.b187224b.png\";","module.exports = __webpack_public_path__ + \"static/media/paf.8af91c80.png\";","\n\nexport default class GameState {\n    constructor(filename) {\n        this.FiftyFifty = true;\n        this.PhoneAMentor = true;\n        this.Audience = true;\n    }\n\n    load(tsv) {\n        console.log(\"Not yet done\");\n        this.Questions = [];\n        let lines = tsv.split('\\n');\n        if (lines.length !== 15) return false;\n        lines.forEach (line => {\n            try {\n                let values = line.split('\\t');\n                let Q = {\n                    value: parseInt(values[1]),\n                    question: values[0],\n                    correct: values[2],\n                    answers: this.shuffle(values.slice(2))\n                };\n                this.Questions.push(Q);\n            } catch (err) {\n                console.log(err);\n                return false;\n            }\n        });\n        console.log(this.Questions);\n        this.Questions.sort((a, b) => {\n            return a.value - b.value;\n        })\n        return true;        \n    }\n\n    UseFiftyFifty() {\n        this.FiftyFifty = false;\n    }\n\n    UsePhone() {\n        this.PhoneAMentor = false;\n    }\n\n    UseAudience() {\n        this.Audience = false;\n    }\n\n    shuffle(a) {\n        var j, x, i;\n        for (i = a.length; i; i--) {\n          j = Math.floor(Math.random() * i);\n          x = a[i - 1];\n          a[i - 1] = a[j];\n          a[j] = x;\n        }\n      \n        return a;\n      }\n    \n}","import React, { Component, Fragment } from 'react';\nimport logo from './logo.svg';\nimport fifty from './fifty.png';\nimport ata from './ata.png';\nimport paf from './paf.png';\nimport './App.css';\nimport GameState from './GameState';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      game: null,\n      guess: \"\",\n      fifty: false,\n      currentQ: 0\n    };\n    this.onFileChange = this.onFileChange.bind(this);\n    this.setUpGame = this.setUpGame.bind(this);\n    this.loadNextQ = this.loadNextQ.bind(this);\n    this.setGuess = this.setGuess.bind(this);\n    this.useFifty = this.useFifty.bind(this);\n    this.usePhone = this.usePhone.bind(this);\n    this.useAudience = this.useAudience.bind(this);\n  }\n\n  setUpGame(csv) {\n    console.log(csv);\n    let gamestate = new GameState()\n    if (gamestate.load(csv)) {\n      this.setState({game: gamestate, currentQ: 0});\n    }\n  }\n\n  \n  onFileChange(e, f) {\n    console.log(\"Loading file\");\n    let file = f || e.target.files[0];\n    let reader = new FileReader();\n    console.log(file);\n\n    reader.onload = () => {\n        this.setUpGame(reader.result);\n    };\n    reader.readAsText(file);\n  }\n\n\n  loadNextQ() {\n    this.setState({currentQ: this.state.currentQ+1, guess: \"\", fifty: false});\n  }\n\n  setGuess(e) {\n    this.setState({guess: e.target.innerHTML});\n  }\n\n  useFifty() {\n    if (!this.state.game.FiftyFifty) return;\n    let g = this.state.game;\n    g.FiftyFifty = false;\n    this.setState({game: g, fifty: true});\n  }\n\n  usePhone() {\n    let g = this.state.game;\n    g.PhoneAMentor = false;\n    this.setState({game: g});\n  }\n\n  useAudience() {\n    let g = this.state.game;\n    g.Audience = false;\n    this.setState({game: g});\n  }\n  \n  shuffle(a) {\n    var j, x, i;\n    for (i = a.length; i; i--) {\n      j = Math.floor(Math.random() * i);\n      x = a[i - 1];\n      a[i - 1] = a[j];\n      a[j] = x;\n    }\n  \n    return a;\n  }\n\n\n  render() {\n    let mainWindow = <label>An error occurred</label>;\n    if (this.state.game === null) {\n      mainWindow = (\n        <Fragment>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" width=\"300\" />\n          <p>\n            Who wants to be a FIRST-ionaire?\n          </p>\n          <label className=\"btn btn-primary\">\n            Load Questions...\n            <input type=\"file\" accept=\".tsv\" onChange={this.onFileChange} hidden/>\n          </label>  \n        </Fragment>\n      )\n    } else if (this.state.currentQ >= 15) {\n      mainWindow = (\n        <Fragment>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" width=\"300\" />\n          <p>\n            YOU ARE A FIRST-IONAIRE!!!\n          </p>\n      </Fragment>\n      );\n    } else {\n      // Playing the game\n      console.log(this.state.game);\n      console.log(this.state.currentQ);\n      let Q = this.state.game.Questions[this.state.currentQ];\n      let Answers = Q.answers;\n      let guessed = this.state.guess !== \"\";\n      let correct = this.state.guess === Q.correct;\n      let crossedOut = [];\n      if (this.state.fifty && !guessed) {\n        let A = this.shuffle([0, 1, 2, 3]);\n        if (Answers[A[0]] === Q.correct) {\n          crossedOut = [A[1], A[2]];\n        } else if (Answers[A[1]] === Q.correct) {\n          crossedOut = [A[0], A[2]];\n        } else {\n          crossedOut = [A[0], A[1]];\n        }\n      }\n\n      mainWindow = (\n        <Fragment>\n          {/* <Navbar fixed=\"top\">\n            Who wants to be a FIRST-ionaire?\n          </Navbar> */}\n          <Container>\n            <Row>\n            <h1 className=\"question\">{Q.question}</h1>\n            </Row>\n            <br/>\n            <Row>\n              <Col sm=\"10\">\n                <br/>\n                <Row className=\"flex-fill\">\n                  <Col><div className={(guessed && Q.correct === Answers[0]) ? \n                      \"correct\" : (this.state.guess === Answers[0] ? \"incorrect\" : \"\")}>\n                    <Button variant={crossedOut.includes(0) ? \"\" : \"primary\"} className=\"btn-lg answer\" onClick={this.setGuess}>{Answers[0]}</Button>\n                    </div></Col>\n                    <Col><div className={(guessed && Q.correct === Answers[1]) ? \n                        \"correct\" : (this.state.guess === Answers[1] ? \"incorrect\" : \"\")}>\n                    <Button variant={crossedOut.includes(1) ? \"\" : \"primary\"} className=\"btn-lg answer\" onClick={this.setGuess}>{Answers[1]}</Button>\n                    </div></Col>\n                </Row>\n                <br/>\n                <br/>\n                <Row className=\"flex-fill\">\n                <Col><div className={(guessed && Q.correct === Answers[2]) ? \n                    \"correct\" : (this.state.guess === Answers[2] ? \"incorrect\" : \"\")}>\n                    <Button variant={crossedOut.includes(2) ? \"\" : \"primary\"} className=\"btn-lg answer\" onClick={this.setGuess}>{Answers[2]}</Button>\n                    </div></Col>\n                    <Col><div className={(guessed && Q.correct === Answers[3]) ? \n                        \"correct\" : (this.state.guess === Answers[3] ? \"incorrect\" : \"\")}>\n                    <Button variant={crossedOut.includes(3) ? \"\" : \"primary\"} className=\"btn-lg answer\" onClick={this.setGuess}>{Answers[3]}</Button>\n                    </div></Col>\n                </Row>\n                <br/>\n                {this.state.guess!==\"\" ? (<Row>\n                  <Col sm=\"10\">\n                    { correct ? (\n                        <Fragment>\n                          <Button onClick={this.loadNextQ}>Next question!</Button>\n                        </Fragment>\n                      ) : (\n                        <Fragment>NO! You lose...   <Button onClick={this.loadNextQ}>Keep going anyway</Button></Fragment>\n                      )\n                    }\n                  </Col>\n                  </Row>) : \n                  <Row><Col><br/></Col></Row>}\n                  <br/>\n                <Row>\n                  <Col sm=\"1\">\n                  </Col>\n                  <Col sm=\"3\">\n                    <Alert variant={this.state.game.FiftyFifty || \"danger\"} onClick={this.useFifty}>\n                      <img src={fifty} alt=\"Fifty-fifty\" width=\"100\" />\n                      </Alert>\n                  </Col>\n                  <Col sm=\"3\">\n                    <Alert variant={this.state.game.PhoneAMentor || \"danger\"} onClick={this.usePhone}>\n                      <img src={paf} alt=\"Phone a mentor\" width=\"100\" />\n                      </Alert>\n                  </Col>\n                  <Col sm=\"3\">\n                    <Alert variant={this.state.game.Audience || \"danger\"} onClick={this.useAudience}>\n                      <img src={ata} alt=\"Ask the audience\" width=\"100\" />\n                      </Alert>\n                  </Col>\n                </Row>\n              </Col>\n              <Col sm=\"2\">\n                <Row><div className={Q.value===1000000?\"current\":\"value\"}>$1,000,000</div></Row>\n                <Row><div className={Q.value===500000?\"current\":\"value\"}>$500,000</div></Row>\n                <Row><div className={Q.value===250000?\"current\":\"value\"}>$250,000</div></Row>\n                <Row><div className={Q.value===125000?\"current\":\"value\"}>$125,000</div></Row>\n                <Row><div className={Q.value===64000?\"current\":\"value\"}>$64,000</div></Row>\n                <Row><div className={Q.value===32000?\"current\":\"value\"}>$32,000</div></Row>\n                <Row><div className={Q.value===16000?\"current\":\"value\"}>$16,000</div></Row>\n                <Row><div className={Q.value===8000?\"current\":\"value\"}>$8,000</div></Row>\n                <Row><div className={Q.value===4000?\"current\":\"value\"}>$4,000</div></Row>\n                <Row><div className={Q.value===2000?\"current\":\"value\"}>$2,000</div></Row>\n                <Row><div className={Q.value===1000?\"current\":\"value\"}>$1,000</div></Row>\n                <Row><div className={Q.value===500?\"current\":\"value\"}>$500</div></Row>\n                <Row><div className={Q.value===300?\"current\":\"value\"}>$300</div></Row>\n                <Row><div className={Q.value===200?\"current\":\"value\"}>$200</div></Row>\n                <Row><div className={Q.value===100?\"current\":\"value\"}>$100</div></Row>\n              </Col>\n            </Row>\n          </Container>\n        </Fragment>\n      )\n\n    } \n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {mainWindow}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}